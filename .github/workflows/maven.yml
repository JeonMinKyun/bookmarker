# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Build

# 어떤 브랜치에서든 코드가 push될 때마다 workflow가 실행
on:
  push:
    branches: [ "**" ]

jobs:
  build-bookmark-api:
    name: Build bookmark-api
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bookmarker-api

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      # Maven build 작업 시 권한으로 인한 접근 허용
      - name: Build with Maven
        run: |
          chmod +x mvnw
          ./mvnw verify

      # docker의 tty 명령어를 사용하기 위한 환경설정
      - name: Build and Publish Docker Image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          ./mvnw clean package jib:dockerBuild -DskipTests
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t myimage:latest .
          docker tag myimage:latest ${{ secrets.DOCKER_USERNAME }}/bookmarker-api:5.0
          docker push ${{ secrets.DOCKER_USERNAME }}/bookmarker-api:5.0
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_CLI_EXPERIMENTAL: enabled
          
          

          
  build-bookmarker-ui:
    name: Build bookmarker-ui
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bookmark-ui-nextjs

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js 22.17.0
        uses: actions/setup-node@v4
        with:
          node-version: 22.17.0
      
      - name: Install dependencies
        run: npm ci
        
      - name: Create .env.local
        run: |
          echo "NEXT_PUBLIC_CLIENT_SIDE_API_BASE_URL=${{ secrets.NEXT_PUBLIC_CLIENT_SIDE_API_BASE_URL }}" > .env.local
          echo "SERVER_SIDE_API_BASE_URL=${{ secrets.SERVER_SIDE_API_BASE_URL }}" >> .env.local

      - name: Build
        run: npm run build

      - name: Build and Publish Docker Image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile.ui -t ${{ secrets.DOCKER_USERNAME }}/bookmark-ui-nextjs:5.0
          docker push ${{ secrets.DOCKER_USERNAME }}/bookmark-ui-nextjs:5.0
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          